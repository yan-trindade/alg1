Relatório Projeto 2

1. Justificativa da Escolha das Estruturas de Dados

Para implementar o TAD Conjunto, foram utilizadas as estruturas Árvore AVL e 
Árvore Rubro-Negra (LLRB). Tais escolhas se baseiam nos seguintes motivos:

- Garantem eficiência com altura máxima de O(log n), essencial para as operações 
  de busca, inserção e remoção.
- A Árvore AVL possui balanceamento rigoroso, resultando em alturas menores, o 
  que favorece operações de busca.
- A Árvore Rubro-Negra, também balanceada (segundo outros critérios), sendo ideal para conjuntos dinâmicos.
- As duas estruturas possibilitam implementação eficiente das operações de conjuntos (união e 
  interseção e pertencimento) pois unem a busca binária com estrutura encadeada, com uso de
  memória flexível.

2. Análise de Complexidade

2.1 Operações Básicas
- Criar Conjunto:
  - AVL e LLRB: O(1), pois envolve apenas a inicialização da raiz como nula.

- Inserir Elemento:
  - AVL: O(log n) para localizar a posição + O(log n) para rebalancear, totalizando 
    O(2 log n).
  - LLRB: O(log n) para localizar a posição + O(1) para rebalanceamento localizado, 
    totalizando O(log n).

- Remover Elemento:
  - AVL: O(log n) para localizar o nó + O(log n) para rebalancear, totalizando 
    O(2 log n).
  - LLRB: O(log n) para localizar o nó + O(log n) para possíveis ajustes e 
    rebalanceamento, totalizando O(2 log n).

- Imprimir Elementos:
  - AVL e LLRB: O(n), pois todos os nós são visitados em uma travessia em-ordem.

2.2 Operações Específicas
- Pertence (Verificar Elemento):
  - AVL e LLRB: O(log n), devido à busca binária até a profundidade da árvore.

- União entre Dois Conjuntos:
  - AVL e LLRB: O(m + n) para percorrer ambos os conjuntos + O((m + n) * log n) para 
    inserir em uma nova árvore, totalizando O((m + n) * log n), em que n e m são a quantidade
    de nós para AVL e LLRB.

- Interseção entre Dois Conjuntos:
  - AVL e LLRB: O(n) para percorrer os elementos de A + O(n * log m) para verificar 
    a presença em B, totalizando O(n * log m).

3. Conclusão

As Árvores AVL e Rubro-Negra são adequadas para implementar conjuntos devido 
à eficiência logarítmica em suas operações. A AVL é indicada para cenários onde 
buscas são mais frequentes, devido ao menor custo em altura. Por outro lado, a 
LLRB é mais eficiente em cenários dinâmicos com muitas inserções e remoções, 
graças ao custo reduzido no rebalanceamento.

A escolha entre AVL e LLRB deve levar em conta o perfil das operações realizadas 
no conjunto, garantindo desempenho ideal para o problema proposto.

4. Casos Testes

A seguir explicaremos os casos testes disponibilizados. Os casos ímpares
são com a estrutura AVL, enquanto os pares, para a LLRB. As entradas
são as mesmas para ambas estruturas. 

Operação de pertencimento:
  - Caso 1 e 2: elemento está presente no conjunto A.
  - Caso 3 e 4: elemento não está presente no conjunto A.
  - Caso 5 e 6: conjunto A vazio.

Operação de união:
  - Caso 7 e 8: conjunto A pertence ao conjunto B
  - Caso 9 e 10: conjunto B vazio

Operação de intersecção:
  - Caso 11 e 12: nenhum elemento em comum 
  - Caso 13 e 14: conjunto A vazio
  - Caso 15 e 16: 1 elemento em comum
  - Caso 17 e 18: todos elementos em comum 
  - Caso 19 e 20: ambos conjuntos vazios 

Operação de remoção:
  - Caso 21 e 22: elemento presente no conjunto A 
  - Caso 23 e 24: elemento não pertence ao conjunto A
  - Caso 25 e 26: conjunto vazio 

Teste de estresse:
  - Caso 27 e 28: conjuntos de 10000 elementos
  - Caso 29 e 30: conjuntos de 50000 elementos









